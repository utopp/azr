% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/default-credential.R
\name{default_token_provider}
\alias{default_token_provider}
\title{Get Default Token Provider Function}
\usage{
default_token_provider(
  scope = NULL,
  tenant_id = NULL,
  client_id = NULL,
  client_secret = NULL,
  use_cache = "disk",
  offline = FALSE,
  .chain = default_credential_chain()
)
}
\arguments{
\item{scope}{Optional character string specifying the authentication scope.}

\item{tenant_id}{Optional character string specifying the tenant ID for
authentication.}

\item{client_id}{Optional character string specifying the client ID for
authentication.}

\item{client_secret}{Optional character string specifying the client secret
for authentication.}

\item{use_cache}{Character string indicating the caching strategy. Defaults
to \code{"disk"}. Options include \code{"disk"} for disk-based caching or \code{"memory"}
for in-memory caching.}

\item{offline}{Logical. If \code{TRUE}, operates in offline mode. Defaults to
\code{FALSE}.}

\item{.chain}{A list of credential objects, where each element must inherit
from the \code{Credential} base class. Credentials are attempted in the order
provided until \code{get_token} succeeds.}
}
\value{
A function that retrieves and returns an authentication token when
called.
}
\description{
Creates a token provider function that retrieves authentication credentials
and returns a callable token getter. This function handles the credential
discovery process and returns the token acquisition method from the
discovered credential object.
}
\examples{
\dontrun{
  token_provider <- default_token_provider(
    scope = "https://graph.microsoft.com/.default",
    tenant_id = "my-tenant-id",
    client_id = "my-client-id",
    client_secret = "my-secret"
  )
  token <- token_provider()
}

}
\seealso{
\code{\link[=default_request_authorizer]{default_request_authorizer()}}, \code{\link[=get_token]{get_token()}}
}
